# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def getIntersectionNode(self, headA, headB):
        """
        :type head1, head1: ListNode
        :rtype: ListNode
        """
        if headA==None or headB==None:
            return None
        '''
        L=[]
        p=headA
        while p:
            L.append(p.val)
            p=p.next
        while headB:
            if headB.val in L:
                return headB
            headB=headB.next
        return None
        '''
        p=headA
        q=headB
        while p and q:
            if p.val==q.val:
                return p
            elif p.val>q.val:
                q=q.next
            else:
                p=p.next
        return None
