# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def mergeTwoLists(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        if l1==None:
            return l2
        elif l2==None:
            return l1
        t=l1
        if l1.val>l2.val:
            t=l2
            print('l2.',l2.val)
            l2=l2.next
        else:
            print('l1.',l1.val)
            l1=l1.next
        r=t
        
        while l1!=None and l2!=None:
            if l1.val<=l2.val:    
                t.next=l1
                print('l1.',l1.val)
                t=l1
                l1=l1.next
            else:
                t.next=l2
                print('l2.',l2.val)
                t=l2
                l2=l2.next
        if l1==None:
            t.next=l2
        elif l2==None:
            t.next=l1
        return r
