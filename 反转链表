# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def reverseList(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        if head==None:
            return None
        if head.next!=None:
            p=head.next
            if p.next!=None:
                q=p.next
                head.next=None
                p.next=head
                while q.next!=None:
                    r=q
                    q=q.next
                    r.next=p
                    p=r
                q.next=p
                return q
            else:
                p.next=head
                head.next=None
                return p
        else:
            return head
