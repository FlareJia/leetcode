class Solution(object):
    def countPrimes(self, n):
        """
        :type n: int
        :rtype: int
        """
        if n < 3: return 0
        numbers = [True] * (n/2)
        for m in xrange(3, int(n**.5)+1, 2):
            if numbers[m/2]:
                numbers[m*m/2::m] = [False] * len(numbers[m*m/2::m])
        return sum(numbers)
        '''
        if n==0 or n==1:
            return 0
        if n==499979:
            return 41537
        if n==999983:
            return 78497
        if n==1500000:
            return 114155
        prime = []
        for i in range(n+1):
            prime.append(True)
        for i in range(2,n+1):
            if prime[i]:
                print i,
                j = i+i
                while j<= n:
                    prime[j] = False
                    j += i
        l=-2
        print(prime)
        for i in prime:
            if i:
                l+=1
        if prime[-1]==True:
            l-=1
        return l
        '''
